import platform
import random
import telegram
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters

#–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
bot_token = '6547665217:AAEs6odbtzDUkEP57l9LZKiFWLTWWx7Tn9w'
updater = Updater(token=bot_token, use_context=True)
dispatcher = updater.dispatcher

#–í–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
quiz_questions = [
    {
        "question": "–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?",
        "options": ["6", "7", "8", "9"],
        "correct_option": 2
    },
    {
        "question": "–ö–∞–∫–∞—è —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?",
        "options": ["–ú–µ—Ä–∫—É—Ä–∏–π", "–í–µ–Ω–µ—Ä–∞", "–ó–µ–º–ª—è", "–Æ–ø–∏—Ç–µ—Ä"],
        "correct_option": 3
    }
]

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(update, context):
    #–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    context.bot.send_message(chat_id=update.effective_chat.id, text="–ü—Ä–∏–≤–µ—Ç üëã –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!üôÇ –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_name(update, context):
    #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    name = update.message.text
    #–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data['name'] = name
    #–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    reply_markup = create_keyboard_markup()
    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    context.bot.send_message(chat_id=update.effective_chat.id, text=f"{name}, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?üôÇ", reply_markup=reply_markup)

#–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
def create_keyboard_markup():
    keyboard = [
        [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ ü§ñ", callback_data='info')],
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ‚ùì", callback_data='quiz')],
        [InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ GitHub –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è ‚û°Ô∏è", url="https://github.com/BashkatovaAD")]
    ]
    return InlineKeyboardMarkup(keyboard)

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ"
def info(update, context):
    #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—à–∏–Ω–µ
    info_text = (
        "üîΩ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–ø—É—â–µ–Ω –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫:\n\n"
        f"Machine: {platform.machine()};\n"
        f"Version: {platform.version()};\n"
        f"Platform: {platform.platform()};\n"
        f"Uname: {platform.uname()};\n"
        f"System: {platform.system()}."
    )
    #–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—à–∏–Ω–µ
    context.bot.send_message(chat_id=update.effective_chat.id, text=info_text)
    #–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    reply_markup = create_keyboard_markup()
    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    context.bot.send_message(chat_id=update.effective_chat.id, text="–ß–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ", reply_markup=reply_markup)

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–π—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"
def quiz(update, context):
    #–í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
    random_question = random.choice(quiz_questions)
    question_text = random_question["question"]
    options = random_question["options"]
    correct_option = random_question["correct_option"]

    #–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã options
    context.user_data['options'] = options
    #–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
    reply_markup = create_quiz_keyboard_markup(options)

    context.user_data['correct_option'] = correct_option
    #–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    context.bot.send_message(chat_id=update.effective_chat.id, text=question_text, reply_markup=reply_markup)

#–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
def create_quiz_keyboard_markup(options):
    keyboard = [[InlineKeyboardButton(option, callback_data=option)] for option in options]
    return InlineKeyboardMarkup(keyboard)

def quiz_answer_callback(update, context):
    #–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    selected_option = update.callback_query.data
    #–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    correct_option = context.user_data.get('correct_option')
    #–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    options = context.user_data.get('options')
    
    #–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    if selected_option == options[correct_option]:
        #–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
        context.bot.send_message(chat_id=update.effective_chat.id, text="–£–†–ê!üëç –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üéâ")
    else:
        #–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
        context.bot.send_message(chat_id=update.effective_chat.id, text="–≠—Ö, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! üòî –≠—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üòî")
    
    #–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    reply_markup = create_keyboard_markup()
    
    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ—Å—å–±–æ–π –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    context.bot.send_message(chat_id=update.effective_chat.id, text="–ß–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_markup)

#–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –∫–ª–∞—Å—Å–æ–≤-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
start_handler = CommandHandler('start', start)
name_handler = MessageHandler(Filters.text & ~Filters.command, get_name)
info_button_handler = CallbackQueryHandler(info, pattern='info')
quiz_button_handler = CallbackQueryHandler(quiz, pattern='quiz')
quiz_answer_handler = CallbackQueryHandler(quiz_answer_callback)

#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
dispatcher.add_handler(start_handler)
dispatcher.add_handler(name_handler)
dispatcher.add_handler(info_button_handler)
dispatcher.add_handler(quiz_button_handler)
dispatcher.add_handler(quiz_answer_handler)

#–ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
updater.start_polling()


